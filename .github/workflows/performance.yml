name: Performance Testing

on:
  schedule:
    - cron: '0 2 * * *'  # Nightly at 2 AM
  workflow_dispatch:
    inputs:
      drone_count:
        description: 'Number of drones to simulate'
        required: false
        default: '25'
        type: string

jobs:
  performance-test:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Start ATLAS services
      run: |
        docker-compose -f docker/ci/test-compose.yml up -d
        sleep 30  # Wait for services to start
    
    - name: Run performance tests
      run: |
        ./atlas test performance --drones ${{ github.event.inputs.drone_count || '25' }} --duration 600
    
    - name: Collect metrics
      run: |
        ./atlas metrics export --format json > performance-results.json
    
    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance-results.json
    
    - name: Comment on performance
      if: github.event_name == 'schedule'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const results = JSON.parse(fs.readFileSync('performance-results.json', 'utf8'));
          
          const body = `## 📊 Nightly Performance Test Results
          
          | Metric | Value | Status |
          |--------|-------|--------|
          | Max Drones | ${results.max_drones} | ${results.max_drones >= 25 ? '✅' : '❌'} |
          | Response Time | ${results.avg_response_time}ms | ${results.avg_response_time < 1000 ? '✅' : '❌'} |
          | Memory Usage | ${results.peak_memory_mb}MB | ${results.peak_memory_mb < 400 ? '✅' : '❌'} |
          | CPU Usage | ${results.avg_cpu_percent}% | ${results.avg_cpu_percent < 80 ? '✅' : '❌'} |
          
          Detailed results available in the [workflow artifacts](${context.payload.repository.html_url}/actions/runs/${context.runId}).`;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Performance Test Results - ${new Date().toISOString().split('T')[0]}`,
            body: body,
            labels: ['performance', 'automated']
          });
